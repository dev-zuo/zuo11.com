[
  {
    "source": "正则表达式使用 () 和 match 或 replace 提取 url 路径参数.md",
    "staticFileName": "regExp_url.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "正则提取 url 参数，来看一个问题，使用正则表达式从 url 中提取区域、城市id、模块、页数id。url 示例如下 1. `http://www.xx.com/region/gd/module` 2. `http://www.xx.com/region/gd-c222/module` 3. `http://www.xx.com/region/gd-c222/module/p2` 下面来看看怎么实现。首先，回顾下正则表达式（Regular Expression）基础。正则表表达式以 `/pattern/flags` 表示，是 RegExp 对象的实例",
    "keywords": "正则提取 url 参数",
    "category": "JavaScript"
  },
  {
    "source": "Vue 组件封装，通过发布订阅模式和 Vue 实例方法实现 js 操作组件.md",
    "staticFileName": "vue_js_comp.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "以消息组件为例，如果多个组件共用一个全局的消息组件，那怎么优雅的显示消息呢？普通的组件 props 传值的方式会受限，因为组件层级是不确定的。你可能会想到状态管理，将是否显示消息、消息内容存到状态管理 state 中，如果需要显示就修改 vuex 值即可。但这样调用起来会不够方便、简洁。这里我们可以使用发布订阅模式，结合 Vue 实例属性来优雅的实现该功能。下面来看看使用示例",
    "keywords": "vue js 操作组件, vue 组件封装",
    "category": "Vue"
  },
  {
    "source": "footer 始终保持在最底部 css 实现与 js 实现优缺点对比.md",
    "staticFileName": "footer_bottom.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "让 footer 一直保持在最底部是比较常见的需求，css 和 js 都可以实现，一般推荐使用 css 实现，下面来看看具体实现，以及他们的优缺点。需要考虑两种情况：1. 内容没占满视窗时，footer 在最底部，需要 body 有最小高度，才能撑起来 2. 内容较多时，滚动到底部才能看到 footer，且不遮挡内容区域",
    "keywords": "footer一直保持到底部怎么实现,footer区域保持在底部,footer固定到底部",
    "category": "CSS"
  },
  {
    "source": "vue 组件中 css 路径简写 @ 不可用，需要使用 ~@.md",
    "staticFileName": "vue_css_src.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "vue css src 路径，css @ 不生效，css src 简写@, webpack 解析 css 路径，在 vue-cli 创建的 vue 项目中，可以使用 @ 来表示 src 路径。但在 css 中，图片路径使用 @ 就会出错。那 css 中要怎么使用 src 相对路径呢？需要在前面加 ~，也就是 ~@，这样就不必使用相对路径了。",
    "keywords": "vue css src 路径,css @ 不生效,css src 简写@,webpack 解析 css 路径",
    "category": "Vue"
  },
  {
    "source": "Vue 国际化 vue-i18n 相关用法、实践总结.md",
    "staticFileName": "vue-i18n_use.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "vue 国际化, Vue 国际化最佳实践, vue-i18n最佳实践, vue-i18n模块化方案, 在 'Vue 使用 vue-i18n 国际化' 中，我们简单介绍了 vue-i18n 的基本使用。如果想将它实际应用到项目中，我们还需要考虑怎么做到更加简洁、优雅、可维护，下面是一些实践总结。1. i18n 单独放一个目录，避免在 main.js 中写入太多内容 2. 方便实时测试：语言切换组件 3. 避免单文件过大、混乱：模块化 4. 列表渲染（code 值）处理：js 取值、过滤器 filter 设计",
    "keywords": "vue 国际化,Vue 国际化最佳实践,vue-i18n最佳实践,vue-i18n模块化方案",
    "category": "Vue"
  },
  {
    "source": "Vue filters 中 this 为 undefined，建议使用传参或 method 处理.md",
    "staticFileName": "vue_filters_this.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "在 i18n 国际化，将 code 转换为国际化文本的场景中，需要使用 this.$i18n 这个变量，但发现 fitlers 中的 this 是 undefined，无法使用，查了下。这个是 Vue 设计问题，以下是作者 尤雨溪 在 issue [this undefined in filters · Issue #5998 · vuejs/vue](https://github.com/vuejs/vue/issues/5998) 下的回复：",
    "keywords": "vue filters this,vue filter this 为空,vue filter 不能使用 this",
    "category": "Vue"
  },
  {
    "source": "String.prototype.replace 多个匹配替换时注意要使用正则.md",
    "staticFileName": "replace_regExp.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "在做字符串替换时可以使用 repalce，但这里要注意，当需要替换多个时，第一个参数不能是字符串，要使用正则表达式。来看一个例子，将字符串 '1,000,000' 中的 ',' 替换为空字符串 ''。注意：上面的例子中，如果单纯的字符串替换，只会替换第一个，全局匹配时，第一个参数就要用正则了",
    "keywords": "replace多个匹配时需要使用正则",
    "category": "JavaScript"
  },
  {
    "source": "v-model 怎么优雅的绑定 Vuex 状态管理中的值，三种方法优缺点.md",
    "staticFileName": "v-model_vuex.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "在需要将 vuex 中的值，直接与表单 v-model 对应时，如果我们按照 vuex 强调的规范，只能通过 mutation 来改变 vuex state，那么会比较麻烦。假设我们脱离规范，关闭严格模式。那么 v-model 可以直接绑定 vuex state 值，会非常方便，但貌似又不合规范，不利于追踪。那到底要怎么做合适呢？个人建议是：怎么方便怎么来，只要项目可控即可。下面来看看几种方法对比 1. 官方推荐：使用 computed 的 get 和 set",
    "keywords": "v-model 绑定 vuex 中的值",
    "category": "Vue"
  },
  {
    "source": "v-if 和 v-show 生命周期钩子函数有什么不同.md",
    "staticFileName": "v-if_v-show_hooks.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "在 vue 中我们知道 v-if 和 v-show 都可以用来控制内容的显示与隐藏，他们的区别是 1. v-if 是惰性加载，只有为 true 时，才真正渲染，否则页面是不存在该元素的。为 false 时，直接从 dom 移除。2. v-show 是根据 css display 属性来显示和隐藏组件的。那么他们的生命周期钩子函数有什么区别呢？1. v-show 控制隐藏或显示的组件，一进入就立即加载，执行 beforeCreate、created、beforeMount、mounted，中间切换显示和隐藏不会触发钩子函数 2. v-if 只有为 true 时，才会正常执行加载的钩子函数，否则不会加载。当切换时，实时挂载(created/mounted)、卸载组件(destoryed)。",
    "keywords": "v-if 与 v-show 钩子函数区别,v-if 与 v-show 区别",
    "category": "Vue"
  },
  {
    "source": "Vscode Live Server 插件 Open With Live Server 没反应，无法打开浏览器.md",
    "staticFileName": "live_server_file.html",
    "author": "guoqzuo",
    "createDate": "2021/05/04",
    "description": "在调试单个 html 文件时，可以使用 Live Server 插件，快速开启 http 服务，并打开当前页面。但目前这个插件可能会出现没反应，打不开的情况，可以使用 **Preview on Web Server** 来代替。使用方法基本一致，右键可以选择浏览器打开，或者在 vscode 侧边栏预览",
    "keywords": "live server 没反应,live server 无法打开浏览器",
    "category": "计算机基础与开发工具"
  }
]
