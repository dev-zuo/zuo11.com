[
  {
    "source": "description在seo中的重要性.md",
    "staticFileName": "seo_description.html",
    "author": "guoqzuo",
    "createDate": "2020/02/16",
    "description": "网站页面描述(description)可能会直接显示在百度搜索的结果里，所以尽量不要写太少，不然看起来内容就比较少，description 最好能对当前页面的内容有一个大概的描述，下面我们来看看为什么会有这个结论。",
    "keywords": "description seo,网站页面描述(description),description在seo中的重要性,seo中Google和百度的一些区别",
    "category": "网站建设与SEO"
  },
  {
    "source": "静态博客生成系统(二)：markdown大纲提取以及页面滚动到对应区域时高亮处理.md",
    "staticFileName": "zuoblog_2_outline.html",
    "author": "guoqzuo",
    "createDate": "2020/02/02",
    "description": "在考虑把个人博客站点静态化时，其中一个原因是markdown的大纲显示比较好，文章结构层次分明，可以更好的阅读。那怎么提取markdown文件的大纲数据，并呈现在网页上呢？下面来看看zuo-blog是怎么处理的。",
    "keywords": "提取markdown文件的大纲结构数据,markdown大纲提取,mardown目录提取,根据大纲数据生成html,页面滚动时，自动切换大纲focus,怎么监听页面滚动到了某个标题区域",
    "category": "前端工程化"
  },
  {
    "source": "静态博客生成系统(三)：node复制或删除文件夹以及npm包命令执行时所在路径获取.md",
    "staticFileName": "zuoblog_3_file.html",
    "author": "guoqzuo",
    "createDate": "2020/02/02",
    "description": "静态博客生成系统，需要把src目录下的源文件生成dist目录下的可部署的文件，对于资源文件需要从src下直接拷贝过去。这就涉及怎么用node复制或删除文件夹了，另外我们在使用zuoblog init执行构建生成时，需要知道命令执行时所在的路径，下面来看看",
    "keywords": "node复制或删除文件夹,npm包命令执行时所在路径获取",
    "category": "前端工程化"
  },
  {
    "source": "深入JS遍历对象，从4个维度比较遍历对象的8种方法.md",
    "staticFileName": "js_obj_iterator.html",
    "author": "guoqzuo",
    "createDate": "2020/02/02",
    "description": "一般遍历对象时，大部分人可能想到的方法是for..in或Object.keys.forEach()，但你知道吗？截止ES2020，在JS中总共有8种方法来遍历对象，而且不同的遍历方法在一些细节方面会有区别，下面我们将从以下几个方面来深入理解JS遍历对象 1. 看似可以遍历对象但又不能遍历对象的for与for...of 2. 可能会对遍历对象产生影响的4种因素：属性是否可枚举、Symbol、是否有继承属性、遍历次序 3. 从ES5到ES2020发展过程中所有的可以遍历对象的方法 4. 通过实例demo来从4个维度比较8种遍历对象的方法 5. 属性遍历次序总结",
    "keywords": "js遍历对象,js遍历对象方法总结,js遍历对象的8种方法",
    "category": "JavaScript"
  },
  {
    "source": "node中的4种模块类型.md",
    "staticFileName": "node_module_type.html",
    "author": "guoqzuo",
    "createDate": "2020/02/04",
    "description": "Node.js的模块化使用CommonJS规范：module.exports导出，require引入。在node中你会发现使用某个模块时，有时候需要require，有时候不需要；有时候需要npm install，有时候不需要，这是为什么呢？下面来看看",
    "keywords": "node中的4种模块类型,node中使用某个模块时为什么有的模块需要require，有的模块又不需要，有的需要npm install，有的又不需要",
    "category": "前端工程化"
  },
  {
    "source": "Node.js、js、v8三者之间的关系.md",
    "staticFileName": "node_js_v8.html",
    "author": "guoqzuo",
    "createDate": "2020/02/04",
    "description": "Node.js 提供了JS运行时（运行js的环境，类似的概念有JRE提供了运行java的环境）。Node.js通过内部集成Chrome V8引擎来解析执行js，Node.js除了解析执行js外，还包含其他功能，比如浏览器里js无法操作文件、无法开启http服务器、而Node.js里可以，主要是因为Node.js里面扩展加入了很多功能。比如使用libuv，提供了文件系统、网络、子进程、管道、信号处理、轮询、流等功能；使用llhttp提供了HTTP解析功能；使用OpenSSL提供tls、crypto加密相关功能等等",
    "keywords": "node.js和js的区别,node.js v8 js之间的关系",
    "category": "前端工程化"
  },
  {
    "source": "nginx访问不带www的域名，自动切到www.md",
    "staticFileName": "www_redirect.html",
    "author": "guoqzuo",
    "createDate": "2020/02/08",
    "description": "在seo时，搜索引擎可能会将xx.com和www.xx.com一起收录。这里需要进行处理，当使用一级域名直接访问时(xx.com)，自动切到www.xx.com，下面来看看怎么配置nginx",
    "keywords": "不带www跳转到www二域名,xx.com重定向到www.xx.com",
    "category": "网站建设与SEO"
  },
  {
    "source": "mysql中char与varchar的区别.md",
    "staticFileName": "char_varchar.html",
    "author": "guoqzuo",
    "createDate": "2020/02/12",
    "description": "在创建表，指定字段数据类型时，如果是字符串数据类型可以是varchar(50)，也可以是char(50)。这两种有什么区别呢？",
    "keywords": "char和varchar的区别,char varchar区别",
    "category": "后端数据库等"
  },
  {
    "source": "为什么书上SQL语句一般都是大写.md",
    "staticFileName": "sql_uppercase.html",
    "author": "guoqzuo",
    "createDate": "2020/02/12",
    "description": "为什么小写更直观，而不使用小写呢？今天在看语法时，有了一个答案，你会发现可变动的内容一般是小写（比如：列名，表名，一些条件），而SQL语法相关的单词都是大写，这样更好理解。全小写描述语法时，对于初学者来看分不清哪些是SQL语句中必须的，哪些是可变动的。以后还是要习惯大写，更规范。",
    "keywords": "为什么书上SQL语句一般都是大写",
    "category": "后端数据库等"
  },
  {
    "source": "ERROR 1396 (HY000): Operation DROP USER failed for 'zhangsan'@'localhost'.md",
    "staticFileName": "sql_localhost.html",
    "author": "guoqzuo",
    "createDate": "2020/02/18",
    "description": "在看mysql账号相关内容时，发现在root用户下，更新、删除用户均报错。后面发现居然是localhost的字母拼错了，但新建user时居然没报错。下面来复盘整个记录:",
    "keywords": "Operation DROP USER failed for,ERROR 1396 (HY000): Operation DROP USER failed for",
    "category": "后端数据库等"
  },
  {
    "source": "使用js调用vue单文件组件.md",
    "staticFileName": "js_vue_comp.html",
    "author": "guoqzuo",
    "createDate": "2020/02/20",
    "description": "在封装组件时，如果是dialog组件，一般封装好后，通过component引入，然后把标签放到html里，通过true或false来隐藏和显示，每次都要写一些重复代码。怎么能够像ElementUI的message函数一样直接调用呢，首先需要搞懂怎么用js来调用vue单文件组件，下面来看方法",
    "keywords": "使用js调用vue单文件组件",
    "category": "Vue"
  },
  {
    "source": "element表单校验函数没生效的问题.md",
    "staticFileName": "el_form_validate.html",
    "author": "guoqzuo",
    "createDate": "2020/02/24",
    "description": "根据element官网的dmeo，加入表单校验，发现校验的rules根本没执行。注意：el-form-item 标签也需要设置 prop 属性，并且名称需要和对应model的名称一致，我这次漏写了，所以一直没生效",
    "keywords": "element表单校验没生效",
    "category": "Vue"
  },
  {
    "source": "element cascader显示异常问题.md",
    "staticFileName": "el_cascader.html",
    "author": "guoqzuo",
    "createDate": "2020/02/24",
    "description": "当cascader里选项比较多时，组件高度会异常，主要是 .el-cascader-menu__wrap 这个样式高度为100%，将cascader里其任意一父元素手动指定高度即可，但el-cascader-menu__wrap设置的效果最好",
    "keywords": "element cascader显示异常问题,element cascader高度问题",
    "category": "Vue"
  },
  {
    "source": "koa ctx.body写在异步里接口会返回404的问题.md",
    "staticFileName": "koa_async_404.html",
    "author": "guoqzuo",
    "createDate": "2020/02/26",
    "description": "在前端mock上传的接口时，发现总是404，刚开始以为是代理的问题，后来单独写了个demo，发现如果ctx.body放在异步的回调，后端接收到请求了，但还是会返回404，下面来具体研究下",
    "keywords": "koa接口404,ctx.body写在异步操作里404",
    "category": "前端工程化"
  },
  {
    "source": "前端怎么获取文件上传进度以及使用node mock上传文件接口demo.md",
    "staticFileName": "upload_progress_monitor.html",
    "author": "guoqzuo",
    "createDate": "2020/02/26",
    "description": "现在接口请求一般用的是axios，对于上传文件的进度监听，我们需要了解在axios的config参数里，可以传入onUploadProgress参数来接收upload进度事件，里面会有上传进度信息。我们前端怎么mock上传文件的接口呢？在koa处理时使用 `post-bodyparser` 可以很好的解析 `multipart/form-data` 数据，下面来具体看看",
    "keywords": "前端获取文件上传进度,文件上传进度demo,怎么获取文件上传进度,axios文件上传进度监听,前端怎么mock上传文件接口",
    "category": "http与https"
  },
  {
    "source": "怎么使用一条命令安装多个npm包.md",
    "staticFileName": "npm_install_multiple.html",
    "author": "guoqzuo",
    "createDate": "2020/02/26",
    "description": "在安装npm包时，我们一般使用 npm install xx --save，但对于一次需要安装多个包的情况，怎么用一条命令来安装呢？下面来看看",
    "keywords": "怎么使用一条命令安装多个npm包,一条命令安装多个npm包",
    "category": "前端工程化"
  },
  {
    "source": "element怎么动态改变校验rules且实时生效.md",
    "staticFileName": "element_form_rules.html",
    "author": "guoqzuo",
    "createDate": "2020/02/27",
    "description": "在需要动态设置rules，并需要其实时生效的场景，一般需要将rules完成改变才行，这是为什么呢，下面来看看",
    "keywords": "element怎么动态改变校验rules且实时生,element el-form rules动态改变",
    "category": "Vue"
  },
  {
    "source": "el-form-item里非elment输入组件时，校验回调函数不触发的问题.md",
    "staticFileName": "not_element_input_validate.html",
    "author": "guoqzuo",
    "createDate": "2020/02/27",
    "description": "今天写表单校验规则，有个 el-form-item 里使用了富文本编辑器，发现校验规则校验这个值会有异常: 1. 当 change 或 blur 时，根本没有触发校验(提示错误) 2. 提交表单时，当该字段校验失败会提示错误，但该字段符合要求时，validate的回调一直没触发，导致无法进行校验成功之后的下一步操作，将富文本编辑器换成 el-input 正常，换成普通的 input 也会异常，感觉一头雾水。",
    "keywords": "element表单校验时如果非element组件会触发布料校验,富文本编辑器在element form中校验回调函数不触发的问题",
    "category": "Vue"
  },
  {
    "source": "怎么给三角形加border，添加到我的小程序UI实现以及需要注意的问题.md",
    "staticFileName": "border_border.html",
    "author": "guoqzuo",
    "createDate": "2020/02/29",
    "description": "在给小程序添加 '添加到我的小程序' 引导时，里面有个带边框的三角形，一般用css画三角形使用的是border，但三角形边的边框怎么画呢？一般用两个三角形叠加来实现",
    "keywords": "css 三角形加border,css 用border画的三角形怎么加border,小程序添加到我的小程序引导UI实现",
    "category": "CSS"
  }
]