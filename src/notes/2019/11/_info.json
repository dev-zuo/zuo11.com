[
  {
    "source": "用mac做前端开发遇到的问题总结.md",
    "staticFileName": "mac_dev.html",
    "author": "guoqzuo",
    "createDate": "2019/11/04",
    "description": "在用mac开发的过程中，会遇到过一些问题，比如怎么显示文件的扩展名；mac隐藏文件 .DS_Store 对node遍历文件产生的影响；mac怎么修改环境变量；mac安装yarn的方法；mac加密zip文件；mac使用触控板来进行复制和拖动窗口等，下面来逐一介绍下。",
    "keywords": "小白用mac做前端,mac 隐藏文件 .DS_Store 对node遍历文件产生的影响,mac export PATH 后关闭termial就失效了,mac修改环境变量,macos安装Yarn方法,mac安装yarn方法,mac zip文件加密,mac显示文件扩展名,mac使用触控板拖动复制、移动窗口,mac三指拖动",
    "category": "计算机基础与开发工具"
  },
  {
    "source": "vue仅开发环境下能看到的路由.md",
    "staticFileName": "vue_dev_router.html",
    "author": "guoqzuo",
    "createDate": "2019/11/04",
    "description": "通过vue-cli创建的项目，npm run build 的代码是可以根据开发环境的不同而调整的，使用 process.env.NODE_ENV 可以做一些只有开发环境有的逻辑，比如下面的例子中，仅开发环境，才能看到相应的路由",
    "keywords": "vue仅开发环境下能看到的路由",
    "category": "vue"
  },
  {
    "source": "根据vue-router路由传参配置keep-alive以及登录校验.md",
    "staticFileName": "vue_router_params.html",
    "author": "guoqzuo",
    "createDate": "2019/11/04",
    "description": "在vue开发中，路由配置的时候，给每个路由添加一个自定义的meta对象，在meta对象中可以设置一些状态，来进行一些操作。可以用来设置是否使用keep-alive，以及登录校验，先来看看配置",
    "keywords": "vue 中路由meta,根据路由配置做登录验证,根据vue-router路由传参配置keep-alive",
    "category": "vue"
  },
  {
    "source": "版本号中的rc是什么意思.md",
    "staticFileName": "version_rc.html",
    "author": "guoqzuo",
    "createDate": "2019/11/05",
    "description": "在看html2canvas的历史版本信息时，发现有rc版本，不知道是什么意思，于是查了下，rc版本代表比较成熟的版本，是release之前版本，除此之外还有aplpha、beta等版本，下面来看看",
    "keywords": "版本号中的rc是什么意思",
    "category": "运维部署与版本控制"
  },
  {
    "source": "jpg、png、bmp、gif图片格式区别，什么是webp？.md",
    "staticFileName": "image_type.html",
    "author": "guoqzuo",
    "createDate": "2019/11/05",
    "description": "在网页开发中一般用的都是png，现在比较流行或者说以后的趋势应该是webp，现有的一些图片格式都些有什么区别的？一般图片主要从两个方面来看：是否能无损压缩，图片大小、是否放大后不失真，下面来具体看看",
    "keywords": "jpg、png、bmp、gif图片格式区别,什么是webp",
    "category": "计算机基础与开发工具"
  },
  {
    "source": "html2canvas将网页转换为图片.md",
    "staticFileName": "html2vanvas.html",
    "author": "guoqzuo",
    "createDate": "2019/11/05",
    "description": "在web开发中，我们需要生成图片时，可以使用html2canvas，他可以将html转为png，pc端还好，移动端css的坑比较多，这里只是简单的介绍下怎么使用。先引入 html2canvas.js，根据其api调用，来看看具体示例",
    "keywords": "html2canvas将网页转换为图片,html2canvas使用示例",
    "category": "js"
  },
  {
    "source": "怎么使用Chrome断点调试功能，断点调试使用场景.md",
    "staticFileName": "breakpoint.html",
    "author": "guoqzuo",
    "createDate": "2019/11/07",
    "description": "在前端开发中，我们调试时一般都会使用console.log在控制台打log看程序执行情况，断点调试的功能好像用的比较少，那什么情况下就需要使用断点调试功能了呢？下面来讨论下",
    "keywords": "怎么使用Chrome断点调试功能,断点调试使用场景",
    "category": "计算机基础与开发工具"
  },
  {
    "source": "position:absolute元素高度自适应，换成relative设置top试试.md",
    "staticFileName": "absolute_auto_height.html",
    "author": "guoqzuo",
    "createDate": "2019/11/08",
    "description": "一般元素设置position:absolute后，就已经脱离了文档流，用css是无法计算其高度的，只能用js获取dom来计算。另外不要把自己限制死了，对于自适应高度的，为什么一定要使用position:absolute呢？**换position:relative也可以设置top、left等css属性**，如果自己真的想不到好的方法，问问其他同事或社群里的人试试？下面来看看我之前由于知识盲点踩的一个坑",
    "keywords": "position:absolute元素高度自适应,怎么用js计算元素高度",
    "category": "css"
  },
  {
    "source": "background-repeat与background-position冲突.md",
    "staticFileName": "repeat_position.html",
    "author": "guoqzuo",
    "createDate": "2019/11/08",
    "description": "background-repeat和background-position最好不要一起使用，background-repeat可能会导致background-position设置失效，当设置是background-repeat在y轴重复背景时，background-position设置的顶部开始具体位置会无效",
    "keywords": "background-repeat与background-position冲突,background-repeat导致background-position失效",
    "category": "css"
  },
  {
    "source": "函数命名validate和verify的区别.md",
    "staticFileName": "validate_verify.html",
    "author": "guoqzuo",
    "createDate": "2019/11/09",
    "description": "一般我们在命名校验的函数时，发现validate和verify都有校验的意思，具体用那个呢？其实区别只是在于证实的强度：confirm < verify < validate，我们来看看",
    "keywords": "函数命名validate和verify的区别",
    "category": "计算机基础与开发工具"
  },
  {
    "source": "css样式优先级，防止外部样式污染组件.md",
    "staticFileName": "css_style_priority.html",
    "author": "guoqzuo",
    "createDate": "2019/11/09",
    "description": "一般在写全局的样式时，总担心污染其他位置的样式，但我们怎么防止别人的样式来污染我们的样式了。一句话总结：对于很重要，不要被污染的用!import，如果不想用!important，那最前面加id，或者多加一个或多个优先级高的选择器，来提高整体优先级",
    "keywords": "css样式优先级,css样式优先级计算,css选择器样式优先级,css防止外部样式污染组件",
    "category": "css"
  },
  {
    "source": "非箭头函数作为参数时this问题.md",
    "staticFileName": "js_this.html",
    "author": "guoqzuo",
    "createDate": "2019/11/09",
    "description": "复习下JS高程3里面将的函数做参数时this的问题，如果是非箭头函数，参数函数中使用了this，那么this取决于执行函数的this指向，而非参数函数执行环境的this，怎么将this绑定呢？有三种方法，1.使用bind绑定一个作用域 2.使用闭包 3.使用箭头函数",
    "keywords": "非箭头函数作为参数时this问题",
    "category": "js"
  }
]
